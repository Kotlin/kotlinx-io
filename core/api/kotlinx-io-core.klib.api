// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm32Hfp, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Alias: apple => [iosArm64, iosSimulatorArm64, iosX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.jetbrains.kotlinx:kotlinx-io-core>
abstract interface kotlinx.io/RawSink : kotlin/AutoCloseable { // kotlinx.io/RawSink|null[0]
    abstract fun close() // kotlinx.io/RawSink.close|close(){}[0]
    abstract fun flush() // kotlinx.io/RawSink.flush|flush(){}[0]
    abstract fun write(kotlinx.io/Buffer, kotlin/Long) // kotlinx.io/RawSink.write|write(kotlinx.io.Buffer;kotlin.Long){}[0]
}
abstract interface kotlinx.io/RawSource : kotlin/AutoCloseable { // kotlinx.io/RawSource|null[0]
    abstract fun close() // kotlinx.io/RawSource.close|close(){}[0]
    abstract fun readAtMostTo(kotlinx.io/Buffer, kotlin/Long): kotlin/Long // kotlinx.io/RawSource.readAtMostTo|readAtMostTo(kotlinx.io.Buffer;kotlin.Long){}[0]
}
final class kotlinx.io.files/FileMetadata { // kotlinx.io.files/FileMetadata|null[0]
    constructor <init>(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Long = ...) // kotlinx.io.files/FileMetadata.<init>|<init>(kotlin.Boolean;kotlin.Boolean;kotlin.Long){}[0]
    final val isDirectory // kotlinx.io.files/FileMetadata.isDirectory|{}isDirectory[0]
        final fun <get-isDirectory>(): kotlin/Boolean // kotlinx.io.files/FileMetadata.isDirectory.<get-isDirectory>|<get-isDirectory>(){}[0]
    final val isRegularFile // kotlinx.io.files/FileMetadata.isRegularFile|{}isRegularFile[0]
        final fun <get-isRegularFile>(): kotlin/Boolean // kotlinx.io.files/FileMetadata.isRegularFile.<get-isRegularFile>|<get-isRegularFile>(){}[0]
    final val size // kotlinx.io.files/FileMetadata.size|{}size[0]
        final fun <get-size>(): kotlin/Long // kotlinx.io.files/FileMetadata.size.<get-size>|<get-size>(){}[0]
}
final class kotlinx.io.files/Path { // kotlinx.io.files/Path|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // kotlinx.io.files/Path.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // kotlinx.io.files/Path.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // kotlinx.io.files/Path.toString|toString(){}[0]
    final val isAbsolute // kotlinx.io.files/Path.isAbsolute|{}isAbsolute[0]
        final fun <get-isAbsolute>(): kotlin/Boolean // kotlinx.io.files/Path.isAbsolute.<get-isAbsolute>|<get-isAbsolute>(){}[0]
    final val name // kotlinx.io.files/Path.name|{}name[0]
        final fun <get-name>(): kotlin/String // kotlinx.io.files/Path.name.<get-name>|<get-name>(){}[0]
    final val parent // kotlinx.io.files/Path.parent|{}parent[0]
        final fun <get-parent>(): kotlinx.io.files/Path? // kotlinx.io.files/Path.parent.<get-parent>|<get-parent>(){}[0]
}
final class kotlinx.io/Buffer : kotlinx.io/Sink, kotlinx.io/Source { // kotlinx.io/Buffer|null[0]
    constructor <init>() // kotlinx.io/Buffer.<init>|<init>(){}[0]
    final fun clear() // kotlinx.io/Buffer.clear|clear(){}[0]
    final fun close() // kotlinx.io/Buffer.close|close(){}[0]
    final fun copy(): kotlinx.io/Buffer // kotlinx.io/Buffer.copy|copy(){}[0]
    final fun copyTo(kotlinx.io/Buffer, kotlin/Long = ..., kotlin/Long = ...) // kotlinx.io/Buffer.copyTo|copyTo(kotlinx.io.Buffer;kotlin.Long;kotlin.Long){}[0]
    final fun emit() // kotlinx.io/Buffer.emit|emit(){}[0]
    final fun exhausted(): kotlin/Boolean // kotlinx.io/Buffer.exhausted|exhausted(){}[0]
    final fun flush() // kotlinx.io/Buffer.flush|flush(){}[0]
    final fun get(kotlin/Long): kotlin/Byte // kotlinx.io/Buffer.get|get(kotlin.Long){}[0]
    final fun hintEmit() // kotlinx.io/Buffer.hintEmit|hintEmit(){}[0]
    final fun peek(): kotlinx.io/Source // kotlinx.io/Buffer.peek|peek(){}[0]
    final fun readAtMostTo(kotlin/ByteArray, kotlin/Int, kotlin/Int): kotlin/Int // kotlinx.io/Buffer.readAtMostTo|readAtMostTo(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
    final fun readAtMostTo(kotlinx.io/Buffer, kotlin/Long): kotlin/Long // kotlinx.io/Buffer.readAtMostTo|readAtMostTo(kotlinx.io.Buffer;kotlin.Long){}[0]
    final fun readByte(): kotlin/Byte // kotlinx.io/Buffer.readByte|readByte(){}[0]
    final fun readInt(): kotlin/Int // kotlinx.io/Buffer.readInt|readInt(){}[0]
    final fun readLong(): kotlin/Long // kotlinx.io/Buffer.readLong|readLong(){}[0]
    final fun readShort(): kotlin/Short // kotlinx.io/Buffer.readShort|readShort(){}[0]
    final fun readTo(kotlinx.io/RawSink, kotlin/Long) // kotlinx.io/Buffer.readTo|readTo(kotlinx.io.RawSink;kotlin.Long){}[0]
    final fun request(kotlin/Long): kotlin/Boolean // kotlinx.io/Buffer.request|request(kotlin.Long){}[0]
    final fun require(kotlin/Long) // kotlinx.io/Buffer.require|require(kotlin.Long){}[0]
    final fun skip(kotlin/Long) // kotlinx.io/Buffer.skip|skip(kotlin.Long){}[0]
    final fun toString(): kotlin/String // kotlinx.io/Buffer.toString|toString(){}[0]
    final fun transferFrom(kotlinx.io/RawSource): kotlin/Long // kotlinx.io/Buffer.transferFrom|transferFrom(kotlinx.io.RawSource){}[0]
    final fun transferTo(kotlinx.io/RawSink): kotlin/Long // kotlinx.io/Buffer.transferTo|transferTo(kotlinx.io.RawSink){}[0]
    final fun write(kotlin/ByteArray, kotlin/Int, kotlin/Int) // kotlinx.io/Buffer.write|write(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
    final fun write(kotlinx.io/Buffer, kotlin/Long) // kotlinx.io/Buffer.write|write(kotlinx.io.Buffer;kotlin.Long){}[0]
    final fun write(kotlinx.io/RawSource, kotlin/Long) // kotlinx.io/Buffer.write|write(kotlinx.io.RawSource;kotlin.Long){}[0]
    final fun writeByte(kotlin/Byte) // kotlinx.io/Buffer.writeByte|writeByte(kotlin.Byte){}[0]
    final fun writeInt(kotlin/Int) // kotlinx.io/Buffer.writeInt|writeInt(kotlin.Int){}[0]
    final fun writeLong(kotlin/Long) // kotlinx.io/Buffer.writeLong|writeLong(kotlin.Long){}[0]
    final fun writeShort(kotlin/Short) // kotlinx.io/Buffer.writeShort|writeShort(kotlin.Short){}[0]
    final val buffer // kotlinx.io/Buffer.buffer|{}buffer[0]
        final fun <get-buffer>(): kotlinx.io/Buffer // kotlinx.io/Buffer.buffer.<get-buffer>|<get-buffer>(){}[0]
    final var size // kotlinx.io/Buffer.size|{}size[0]
        final fun <get-size>(): kotlin/Long // kotlinx.io/Buffer.size.<get-size>|<get-size>(){}[0]
}
final fun (kotlinx.io.files/Path).kotlinx.io.files/sink(): kotlinx.io/Sink // kotlinx.io.files/sink|sink@kotlinx.io.files.Path(){}[0]
final fun (kotlinx.io.files/Path).kotlinx.io.files/source(): kotlinx.io/Source // kotlinx.io.files/source|source@kotlinx.io.files.Path(){}[0]
final fun (kotlinx.io/Buffer).kotlinx.io/indexOf(kotlin/Byte, kotlin/Long = ..., kotlin/Long = ...): kotlin/Long // kotlinx.io/indexOf|indexOf@kotlinx.io.Buffer(kotlin.Byte;kotlin.Long;kotlin.Long){}[0]
final fun (kotlinx.io/Buffer).kotlinx.io/indexOf(kotlinx.io.bytestring/ByteString, kotlin/Long = ...): kotlin/Long // kotlinx.io/indexOf|indexOf@kotlinx.io.Buffer(kotlinx.io.bytestring.ByteString;kotlin.Long){}[0]
final fun (kotlinx.io/Buffer).kotlinx.io/readString(): kotlin/String // kotlinx.io/readString|readString@kotlinx.io.Buffer(){}[0]
final fun (kotlinx.io/Buffer).kotlinx.io/snapshot(): kotlinx.io.bytestring/ByteString // kotlinx.io/snapshot|snapshot@kotlinx.io.Buffer(){}[0]
final fun (kotlinx.io/RawSink).kotlinx.io/buffered(): kotlinx.io/Sink // kotlinx.io/buffered|buffered@kotlinx.io.RawSink(){}[0]
final fun (kotlinx.io/RawSource).kotlinx.io/buffered(): kotlinx.io/Source // kotlinx.io/buffered|buffered@kotlinx.io.RawSource(){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/write(kotlinx.io.bytestring/ByteString, kotlin/Int = ..., kotlin/Int = ...) // kotlinx.io/write|write@kotlinx.io.Sink(kotlinx.io.bytestring.ByteString;kotlin.Int;kotlin.Int){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeCodePointValue(kotlin/Int) // kotlinx.io/writeCodePointValue|writeCodePointValue@kotlinx.io.Sink(kotlin.Int){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeDecimalLong(kotlin/Long) // kotlinx.io/writeDecimalLong|writeDecimalLong@kotlinx.io.Sink(kotlin.Long){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeDouble(kotlin/Double) // kotlinx.io/writeDouble|writeDouble@kotlinx.io.Sink(kotlin.Double){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeDoubleLe(kotlin/Double) // kotlinx.io/writeDoubleLe|writeDoubleLe@kotlinx.io.Sink(kotlin.Double){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeFloat(kotlin/Float) // kotlinx.io/writeFloat|writeFloat@kotlinx.io.Sink(kotlin.Float){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeFloatLe(kotlin/Float) // kotlinx.io/writeFloatLe|writeFloatLe@kotlinx.io.Sink(kotlin.Float){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeHexadecimalUnsignedLong(kotlin/Long) // kotlinx.io/writeHexadecimalUnsignedLong|writeHexadecimalUnsignedLong@kotlinx.io.Sink(kotlin.Long){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeIntLe(kotlin/Int) // kotlinx.io/writeIntLe|writeIntLe@kotlinx.io.Sink(kotlin.Int){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeLongLe(kotlin/Long) // kotlinx.io/writeLongLe|writeLongLe@kotlinx.io.Sink(kotlin.Long){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeShortLe(kotlin/Short) // kotlinx.io/writeShortLe|writeShortLe@kotlinx.io.Sink(kotlin.Short){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeString(kotlin/CharSequence, kotlin/Int = ..., kotlin/Int = ...) // kotlinx.io/writeString|writeString@kotlinx.io.Sink(kotlin.CharSequence;kotlin.Int;kotlin.Int){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeString(kotlin/String, kotlin/Int = ..., kotlin/Int = ...) // kotlinx.io/writeString|writeString@kotlinx.io.Sink(kotlin.String;kotlin.Int;kotlin.Int){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeUByte(kotlin/UByte) // kotlinx.io/writeUByte|writeUByte@kotlinx.io.Sink(kotlin.UByte){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeUInt(kotlin/UInt) // kotlinx.io/writeUInt|writeUInt@kotlinx.io.Sink(kotlin.UInt){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeUIntLe(kotlin/UInt) // kotlinx.io/writeUIntLe|writeUIntLe@kotlinx.io.Sink(kotlin.UInt){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeULong(kotlin/ULong) // kotlinx.io/writeULong|writeULong@kotlinx.io.Sink(kotlin.ULong){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeULongLe(kotlin/ULong) // kotlinx.io/writeULongLe|writeULongLe@kotlinx.io.Sink(kotlin.ULong){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeUShort(kotlin/UShort) // kotlinx.io/writeUShort|writeUShort@kotlinx.io.Sink(kotlin.UShort){}[0]
final fun (kotlinx.io/Sink).kotlinx.io/writeUShortLe(kotlin/UShort) // kotlinx.io/writeUShortLe|writeUShortLe@kotlinx.io.Sink(kotlin.UShort){}[0]
final fun (kotlinx.io/Source).kotlinx.io/indexOf(kotlin/Byte, kotlin/Long = ..., kotlin/Long = ...): kotlin/Long // kotlinx.io/indexOf|indexOf@kotlinx.io.Source(kotlin.Byte;kotlin.Long;kotlin.Long){}[0]
final fun (kotlinx.io/Source).kotlinx.io/indexOf(kotlinx.io.bytestring/ByteString, kotlin/Long = ...): kotlin/Long // kotlinx.io/indexOf|indexOf@kotlinx.io.Source(kotlinx.io.bytestring.ByteString;kotlin.Long){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readByteArray(): kotlin/ByteArray // kotlinx.io/readByteArray|readByteArray@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readByteArray(kotlin/Int): kotlin/ByteArray // kotlinx.io/readByteArray|readByteArray@kotlinx.io.Source(kotlin.Int){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readByteString(): kotlinx.io.bytestring/ByteString // kotlinx.io/readByteString|readByteString@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readByteString(kotlin/Int): kotlinx.io.bytestring/ByteString // kotlinx.io/readByteString|readByteString@kotlinx.io.Source(kotlin.Int){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readCodePointValue(): kotlin/Int // kotlinx.io/readCodePointValue|readCodePointValue@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readDecimalLong(): kotlin/Long // kotlinx.io/readDecimalLong|readDecimalLong@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readDouble(): kotlin/Double // kotlinx.io/readDouble|readDouble@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readDoubleLe(): kotlin/Double // kotlinx.io/readDoubleLe|readDoubleLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readFloat(): kotlin/Float // kotlinx.io/readFloat|readFloat@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readFloatLe(): kotlin/Float // kotlinx.io/readFloatLe|readFloatLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readHexadecimalUnsignedLong(): kotlin/Long // kotlinx.io/readHexadecimalUnsignedLong|readHexadecimalUnsignedLong@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readIntLe(): kotlin/Int // kotlinx.io/readIntLe|readIntLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readLine(): kotlin/String? // kotlinx.io/readLine|readLine@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readLineStrict(kotlin/Long = ...): kotlin/String // kotlinx.io/readLineStrict|readLineStrict@kotlinx.io.Source(kotlin.Long){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readLongLe(): kotlin/Long // kotlinx.io/readLongLe|readLongLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readShortLe(): kotlin/Short // kotlinx.io/readShortLe|readShortLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readString(): kotlin/String // kotlinx.io/readString|readString@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readString(kotlin/Long): kotlin/String // kotlinx.io/readString|readString@kotlinx.io.Source(kotlin.Long){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readTo(kotlin/ByteArray, kotlin/Int = ..., kotlin/Int = ...) // kotlinx.io/readTo|readTo@kotlinx.io.Source(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readUByte(): kotlin/UByte // kotlinx.io/readUByte|readUByte@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readUInt(): kotlin/UInt // kotlinx.io/readUInt|readUInt@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readUIntLe(): kotlin/UInt // kotlinx.io/readUIntLe|readUIntLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readULong(): kotlin/ULong // kotlinx.io/readULong|readULong@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readULongLe(): kotlin/ULong // kotlinx.io/readULongLe|readULongLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readUShort(): kotlin/UShort // kotlinx.io/readUShort|readUShort@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/readUShortLe(): kotlin/UShort // kotlinx.io/readUShortLe|readUShortLe@kotlinx.io.Source(){}[0]
final fun (kotlinx.io/Source).kotlinx.io/startsWith(kotlin/Byte): kotlin/Boolean // kotlinx.io/startsWith|startsWith@kotlinx.io.Source(kotlin.Byte){}[0]
final fun kotlinx.io.files/Path(kotlin/String): kotlinx.io.files/Path // kotlinx.io.files/Path|Path(kotlin.String){}[0]
final fun kotlinx.io.files/Path(kotlin/String, kotlin/Array<out kotlin/String>...): kotlinx.io.files/Path // kotlinx.io.files/Path|Path(kotlin.String;kotlin.Array<out|kotlin.String>...){}[0]
final fun kotlinx.io.files/Path(kotlinx.io.files/Path, kotlin/Array<out kotlin/String>...): kotlinx.io.files/Path // kotlinx.io.files/Path|Path(kotlinx.io.files.Path;kotlin.Array<out|kotlin.String>...){}[0]
final fun kotlinx.io/discardingSink(): kotlinx.io/RawSink // kotlinx.io/discardingSink|discardingSink(){}[0]
final inline fun (kotlinx.io/Sink).kotlinx.io/writeToInternalBuffer(kotlin/Function1<kotlinx.io/Buffer, kotlin/Unit>) // kotlinx.io/writeToInternalBuffer|writeToInternalBuffer@kotlinx.io.Sink(kotlin.Function1<kotlinx.io.Buffer,kotlin.Unit>){}[0]
final val kotlinx.io.files/SystemFileSystem // kotlinx.io.files/SystemFileSystem|{}SystemFileSystem[0]
    final fun <get-SystemFileSystem>(): kotlinx.io.files/FileSystem // kotlinx.io.files/SystemFileSystem.<get-SystemFileSystem>|<get-SystemFileSystem>(){}[0]
final val kotlinx.io.files/SystemPathSeparator // kotlinx.io.files/SystemPathSeparator|{}SystemPathSeparator[0]
    final fun <get-SystemPathSeparator>(): kotlin/Char // kotlinx.io.files/SystemPathSeparator.<get-SystemPathSeparator>|<get-SystemPathSeparator>(){}[0]
final val kotlinx.io.files/SystemTemporaryDirectory // kotlinx.io.files/SystemTemporaryDirectory|{}SystemTemporaryDirectory[0]
    final fun <get-SystemTemporaryDirectory>(): kotlinx.io.files/Path // kotlinx.io.files/SystemTemporaryDirectory.<get-SystemTemporaryDirectory>|<get-SystemTemporaryDirectory>(){}[0]
open annotation class kotlinx.io/DelicateIoApi : kotlin/Annotation { // kotlinx.io/DelicateIoApi|null[0]
    constructor <init>() // kotlinx.io/DelicateIoApi.<init>|<init>(){}[0]
}
open annotation class kotlinx.io/InternalIoApi : kotlin/Annotation { // kotlinx.io/InternalIoApi|null[0]
    constructor <init>() // kotlinx.io/InternalIoApi.<init>|<init>(){}[0]
}
open class kotlinx.io.files/FileNotFoundException : kotlinx.io/IOException { // kotlinx.io.files/FileNotFoundException|null[0]
    constructor <init>(kotlin/String?) // kotlinx.io.files/FileNotFoundException.<init>|<init>(kotlin.String?){}[0]
}
open class kotlinx.io/EOFException : kotlinx.io/IOException { // kotlinx.io/EOFException|null[0]
    constructor <init>() // kotlinx.io/EOFException.<init>|<init>(){}[0]
    constructor <init>(kotlin/String?) // kotlinx.io/EOFException.<init>|<init>(kotlin.String?){}[0]
}
open class kotlinx.io/IOException : kotlin/Exception { // kotlinx.io/IOException|null[0]
    constructor <init>() // kotlinx.io/IOException.<init>|<init>(){}[0]
    constructor <init>(kotlin/String?) // kotlinx.io/IOException.<init>|<init>(kotlin.String?){}[0]
    constructor <init>(kotlin/String?, kotlin/Throwable?) // kotlinx.io/IOException.<init>|<init>(kotlin.String?;kotlin.Throwable?){}[0]
    constructor <init>(kotlin/Throwable?) // kotlinx.io/IOException.<init>|<init>(kotlin.Throwable?){}[0]
}
sealed interface kotlinx.io.files/FileSystem { // kotlinx.io.files/FileSystem|null[0]
    abstract fun atomicMove(kotlinx.io.files/Path, kotlinx.io.files/Path) // kotlinx.io.files/FileSystem.atomicMove|atomicMove(kotlinx.io.files.Path;kotlinx.io.files.Path){}[0]
    abstract fun createDirectories(kotlinx.io.files/Path, kotlin/Boolean = ...) // kotlinx.io.files/FileSystem.createDirectories|createDirectories(kotlinx.io.files.Path;kotlin.Boolean){}[0]
    abstract fun delete(kotlinx.io.files/Path, kotlin/Boolean = ...) // kotlinx.io.files/FileSystem.delete|delete(kotlinx.io.files.Path;kotlin.Boolean){}[0]
    abstract fun exists(kotlinx.io.files/Path): kotlin/Boolean // kotlinx.io.files/FileSystem.exists|exists(kotlinx.io.files.Path){}[0]
    abstract fun list(kotlinx.io.files/Path): kotlin.collections/Collection<kotlinx.io.files/Path> // kotlinx.io.files/FileSystem.list|list(kotlinx.io.files.Path){}[0]
    abstract fun metadataOrNull(kotlinx.io.files/Path): kotlinx.io.files/FileMetadata? // kotlinx.io.files/FileSystem.metadataOrNull|metadataOrNull(kotlinx.io.files.Path){}[0]
    abstract fun resolve(kotlinx.io.files/Path): kotlinx.io.files/Path // kotlinx.io.files/FileSystem.resolve|resolve(kotlinx.io.files.Path){}[0]
    abstract fun sink(kotlinx.io.files/Path, kotlin/Boolean = ...): kotlinx.io/RawSink // kotlinx.io.files/FileSystem.sink|sink(kotlinx.io.files.Path;kotlin.Boolean){}[0]
    abstract fun source(kotlinx.io.files/Path): kotlinx.io/RawSource // kotlinx.io.files/FileSystem.source|source(kotlinx.io.files.Path){}[0]
}
sealed interface kotlinx.io/Sink : kotlinx.io/RawSink { // kotlinx.io/Sink|null[0]
    abstract fun emit() // kotlinx.io/Sink.emit|emit(){}[0]
    abstract fun flush() // kotlinx.io/Sink.flush|flush(){}[0]
    abstract fun hintEmit() // kotlinx.io/Sink.hintEmit|hintEmit(){}[0]
    abstract fun transferFrom(kotlinx.io/RawSource): kotlin/Long // kotlinx.io/Sink.transferFrom|transferFrom(kotlinx.io.RawSource){}[0]
    abstract fun write(kotlin/ByteArray, kotlin/Int = ..., kotlin/Int = ...) // kotlinx.io/Sink.write|write(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
    abstract fun write(kotlinx.io/RawSource, kotlin/Long) // kotlinx.io/Sink.write|write(kotlinx.io.RawSource;kotlin.Long){}[0]
    abstract fun writeByte(kotlin/Byte) // kotlinx.io/Sink.writeByte|writeByte(kotlin.Byte){}[0]
    abstract fun writeInt(kotlin/Int) // kotlinx.io/Sink.writeInt|writeInt(kotlin.Int){}[0]
    abstract fun writeLong(kotlin/Long) // kotlinx.io/Sink.writeLong|writeLong(kotlin.Long){}[0]
    abstract fun writeShort(kotlin/Short) // kotlinx.io/Sink.writeShort|writeShort(kotlin.Short){}[0]
    abstract val buffer // kotlinx.io/Sink.buffer|{}buffer[0]
        abstract fun <get-buffer>(): kotlinx.io/Buffer // kotlinx.io/Sink.buffer.<get-buffer>|<get-buffer>(){}[0]
}
sealed interface kotlinx.io/Source : kotlinx.io/RawSource { // kotlinx.io/Source|null[0]
    abstract fun exhausted(): kotlin/Boolean // kotlinx.io/Source.exhausted|exhausted(){}[0]
    abstract fun peek(): kotlinx.io/Source // kotlinx.io/Source.peek|peek(){}[0]
    abstract fun readAtMostTo(kotlin/ByteArray, kotlin/Int = ..., kotlin/Int = ...): kotlin/Int // kotlinx.io/Source.readAtMostTo|readAtMostTo(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
    abstract fun readByte(): kotlin/Byte // kotlinx.io/Source.readByte|readByte(){}[0]
    abstract fun readInt(): kotlin/Int // kotlinx.io/Source.readInt|readInt(){}[0]
    abstract fun readLong(): kotlin/Long // kotlinx.io/Source.readLong|readLong(){}[0]
    abstract fun readShort(): kotlin/Short // kotlinx.io/Source.readShort|readShort(){}[0]
    abstract fun readTo(kotlinx.io/RawSink, kotlin/Long) // kotlinx.io/Source.readTo|readTo(kotlinx.io.RawSink;kotlin.Long){}[0]
    abstract fun request(kotlin/Long): kotlin/Boolean // kotlinx.io/Source.request|request(kotlin.Long){}[0]
    abstract fun require(kotlin/Long) // kotlinx.io/Source.require|require(kotlin.Long){}[0]
    abstract fun skip(kotlin/Long) // kotlinx.io/Source.skip|skip(kotlin.Long){}[0]
    abstract fun transferTo(kotlinx.io/RawSink): kotlin/Long // kotlinx.io/Source.transferTo|transferTo(kotlinx.io.RawSink){}[0]
    abstract val buffer // kotlinx.io/Source.buffer|{}buffer[0]
        abstract fun <get-buffer>(): kotlinx.io/Buffer // kotlinx.io/Source.buffer.<get-buffer>|<get-buffer>(){}[0]
}
// Targets: [apple]
final fun (kotlinx.io/Sink).kotlinx.io/asNSOutputStream(): platform.Foundation/NSOutputStream // kotlinx.io/asNSOutputStream|asNSOutputStream@kotlinx.io.Sink(){}[0]
// Targets: [apple]
final fun (kotlinx.io/Source).kotlinx.io/asNSInputStream(): platform.Foundation/NSInputStream // kotlinx.io/asNSInputStream|asNSInputStream@kotlinx.io.Source(){}[0]
// Targets: [apple]
final fun (platform.Foundation/NSInputStream).kotlinx.io/asSource(): kotlinx.io/RawSource // kotlinx.io/asSource|asSource@platform.Foundation.NSInputStream(){}[0]
// Targets: [apple]
final fun (platform.Foundation/NSOutputStream).kotlinx.io/asSink(): kotlinx.io/RawSink // kotlinx.io/asSink|asSink@platform.Foundation.NSOutputStream(){}[0]
